name: "ENV vars"
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]

env:
  FOLDER: folder_name
  FILE: $FOLDER/file_name
  INPUT: "http://$FOLDER-$FILE"
  DATAFLOW_NAME: "BLABLABLA"

jobs:
  local-envs:
    runs-on: ubuntu-latest
    env:
      DATAFLOW: echo -e "$DATAFLOW_NAME"
    steps:
    - name: MARKDOWN INPUT
      run: |
        echo -e "env local env is ${{ env.DATAFLOW }}\n" >> $GITHUB_STEP_SUMMARY
  preparation:
    runs-on: ubuntu-latest
    needs:
    - local-envs
    outputs:
      INPUT:          ${{ steps.output.outputs.INPUT }}
    steps:
    - id: env
      name: PREPARE INPUT
      run: echo "INPUT  =   ${{ env.INPUT }}"     >> $GITHUB_ENV
    - id: output
      name: PREPARE INPUT
      run: echo -e "INPUT=   ${{ env.INPUT }}"     >> $GITHUB_OUTPUT
    - name: MARKDOWN INPUT
      run: |
        echo -e "env INPUT IS ${{ env.INPUT }}\n" >> $GITHUB_STEP_SUMMARY
        echo -e "output INPUT IS ${{ steps.output.outputs.INPUT }}\n" >> $GITHUB_STEP_SUMMARY
    #- name: ECHO INPUT
    #  run: echo "::set-output name=INPUT::${{ env.INPUT }}"
  return-nested-values:
    runs-on: ubuntu-latest
    needs: 
    - preparation
    steps:
    - run: echo ${{ env.FILE }}
    - name: Create directory $FOLDER
      run: mkdir -p $FOLDER
    - name: Create file ${{ env.FILE }}
      run: touch ${{ env.FILE }}
    - name: Verify directory
      run: ls -la .
    - name: Verify file
      run: ls -la ${{ env.FILE }}
    - name: Change file with ${{ env.INPUT }}
      run: |
        cat > ${{ env.FILE }} << EOF
         ${{ needs.preparation.outputs.INPUT }}
        EOF
    - name: Verify file content
      run: cat ${{ env.FILE }}
    - name: MARKDOWN VALUE
      run: echo -e "INPUT IS ${{ needs.preparation.outputs.INPUT }}" >> $GITHUB_STEP_SUMMARY

