name: Add Branch Name as First Commit Message

on:
  push:
  workflow_dispatch:
    inputs:
      country:
        description: Cluster on which Locust runs
        required: true
        type: choice
        default: cluster1
        options:
          - cluster1
          - cluster2

env:
  CLUSTERS: |
    {
      "cluster1": "cluster-1",
      "cluster2": "cluster-2"
    }

jobs:  
  return-bool:
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.get-bool.outputs.continue }}
    steps:
    - id: get-bool
      run: |
        echo "continue=false" >> $GITHUB_OUTPUT
        #echo "continue='false'" >> $GITHUB_OUTPUT
        #echo "continue=false" >> "$GITHUB_OUTPUT"
        
        #echo "::set-output name=continue::false" >> "$GITHUB_OUTPUT"
    - run: |
        echo "${{ steps.get-bool.outputs.continue }}" >> $GITHUB_STEP_SUMMARY

  run-on-bool:
    if: ${{ needs.return-bool.outputs.continue == 'true'}}
    needs:
      - return-bool
    runs-on: ubuntu-latest
    steps:
    - id: get-bool
      run: |
        echo "${{ needs.return-bool.outputs.continue }}" >> $GITHUB_STEP_SUMMARY

  final-run-on-bool:
    if: |
      always()

    #&& (contains(needs.run-on-bool.result, 'skipped') || contains(needs.run-on-bool.result, 'success'))
    needs:
      - return-bool
      - run-on-bool
    runs-on: ubuntu-latest
    steps:
    - id: get-bool
      run: |
        #echo "${{ needs.return-bool.outputs.continue }}" >> $GITHUB_STEP_SUMMARY
        
        echo "contains(needs.run-on-bool.result, 'skipped') == 'true'" >> $GITHUB_STEP_SUMMARY
        echo "needs.run-on-bool.result == 'skipped'" >> $GITHUB_STEP_SUMMARY
        echo "contains(needs.run-on-bool.result, 'success') == 'true'" >> $GITHUB_STEP_SUMMARY
        echo "needs.run-on-bool.result == 'success'" >> $GITHUB_STEP_SUMMARY

        echo "result=${{ contains(needs.run-on-bool.result, 'skipped') }}" >> $GITHUB_OUTPUT
    - run: |
        echo "${{ steps.get-bool.outputs.result }}" >> $GITHUB_STEP_SUMMARY
        
  on_delete:
    if: ${{ (github.event_name == 'delete') }}
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Runs on delete"
  prep:
    runs-on: ubuntu-latest
    outputs:
      cluster: ${{ steps.prepare.outputs.cluster }}
    steps:
      - id: prepare
        run: |
          echo "cluster=${{ github.event_name == 'push' && 'PUSH' || fromJSON(env.CLUSTERS)[inputs.country] }}" >> $GITHUB_OUTPUT
      
  cleanup-load-tests:
    needs: prep
    runs-on: ubuntu-latest
    env:
      CLUSTER: ${{ needs.prep.outputs.cluster }}
      # ${{ github.event_name == 'push' && 'PUSH' || 
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
    steps:
      - run: |
          echo "$CLUSTER" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
  husky:
    needs: cleanup-load-tests
    runs-on: ubuntu-latest
    steps:
    - name: Install husky
      run: |
        npm install husky --save-dev >> $GITHUB_STEP_SUMMARY
    - name: Download code
      uses: actions/checkout@v2
      
  add-commit-message:
    runs-on: ubuntu-latest
    needs:
    - cleanup-load-tests
    - husky
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get branch name
        id: get-branch-name
        #run: echo "::set-output name=branch-name::$(echo ${GITHUB_REF#refs/heads/} | sed -E 's/[^a-zA-Z0-9]+/-/g')"
        run: |
          echo "branch-name=$(echo ${GITHUB_REF#refs/heads/} | sed -nE 's#.*?([a-zA-Z]{3}-[0-9]{0,5})$#\1#p')" >> $GITHUB_OUTPUT
          echo "branch-name=$(echo ${GITHUB_REF#refs/heads/} | sed -nE 's#.*?([a-zA-Z]{3}-[0-9]{0,5})$#\1#p')" >> $GITHUB_STEP_SUMMARY
          echo "${GITHUB_REF#refs/heads/}" >> $GITHUB_STEP_SUMMARY
